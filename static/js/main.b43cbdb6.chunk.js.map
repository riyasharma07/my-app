{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","id","abouttext","TextForm","useState","color","backgroundColor","myStyle","setMyStyle","btntext","setBtnText","toggleStyle","text","setText","style","heading","class","onClick","for","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","split","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAGe,SAASA,EAAOC,GAG3B,OACI,qBAAKC,UAAU,8CAAf,SACA,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SACGF,EAAMG,QAET,wBACEF,UAAU,iBACVG,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMH,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,SACE,oBAAIJ,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOC,KAAK,IAAxD,SACGF,EAAMM,uB,WCzBV,SAASC,EAASP,GAC/B,MAA8BQ,mBAAS,CACrCC,MAAO,QACPC,gBAAiB,UAFnB,mBAAOC,EAAP,KAAgBC,EAAhB,KAIA,EAA8BJ,mBAAS,oBAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAc,WACG,SAAjBJ,EAAQF,OACVG,EAAW,CACTH,MAAO,QACPC,gBAAiB,UAEnBI,EAAW,uBAEXF,EAAW,CACTH,MAAO,QACPC,gBAAiB,UAEnBI,EAAW,sBAkBf,EAAwBN,mBAAS,uBAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KAEA,OACE,qCACE,sBAAKhB,UAAU,YAAYiB,MAAOP,EAAlC,UACE,sBAAKV,UAAU,yCAAf,UACE,6BAAKD,EAAMmB,UACX,sBAAMlB,UAAU,yCAAhB,SACE,sBAAKmB,MAAM,yBAAX,UACE,uBACEA,MAAM,mBACNC,QAASN,EACTX,KAAK,WACLC,GAAG,2BAEL,uBACEe,MAAM,mBACNC,QAASN,EACTO,IAAI,yBAHN,SAKGT,YAKT,qBAAKZ,UAAU,OAAf,SACE,0BACEA,UAAU,eACVsB,MAAOP,EACPQ,SAjCW,SAACC,GAEpBR,EAAQQ,EAAMC,OAAOH,QAgCblB,GAAG,QACHsB,KAAK,QAGT,wBAAQ1B,UAAU,uBAAuBoB,QAhDzB,WAEpB,IAAIO,EAAUZ,EAAKa,cACnBZ,EAAQW,IA6CJ,uBAGA,wBAAQ3B,UAAU,uBAAuBoB,QA9CzB,WACpB,IAAIO,EAAUZ,EAAKc,cACnBb,EAAQW,IA4CJ,0BAKF,sBAAK3B,UAAU,iBAAiBiB,MAAOP,EAAvC,UACE,qDACA,uCACSK,EAAKe,MAAM,IAAIC,OADxB,cAC2ChB,EAAKgB,OADhD,iBAGA,uCAAU,KAAQhB,EAAKe,MAAM,IAAIC,OAAjC,sBACA,yCACA,4BAAIhB,UCxEGiB,MAXf,WACE,OACE,qCACA,cAAClC,EAAD,CAAQI,MAAM,eAAeG,UAAU,UACvC,qBAAKL,UAAU,YAAf,SACA,cAACM,EAAD,CAAUY,QAAQ,wBCEPe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b43cbdb6.chunk.js","sourcesContent":["import React ,{useState}from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n  \r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  {props.abouttext}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n           \r\n           \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes= {\r\n    title: PropTypes.string,\r\n    abouttext:PropTypes.string\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [myStyle, setMyStyle] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\",\r\n  });\r\n  const [btntext, setBtnText] = useState(\"Enable dark mode\");\r\n\r\n  const toggleStyle = () => {\r\n    if (myStyle.color == \"black\") {\r\n      setMyStyle({\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n      });\r\n      setBtnText(\"Enable light mode\");\r\n    } else {\r\n      setMyStyle({\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n      });\r\n      setBtnText(\"Enable dark mode\");\r\n    }\r\n  };\r\n\r\n  const handleUpClick = () => {\r\n    //console.log(\"uppercase is clicked\"+ text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    //console.log(\"On change\")\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"Enter a text here..\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={myStyle}>\r\n        <div className=\"d-flex flex-row bd-highlight my-3 mx-3\">\r\n          <h1>{props.heading}</h1>\r\n          <form className=\"d-flex flex-row bd-highlight my-3 mx-3\">\r\n            <div class=\"form-check form-switch\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                onClick={toggleStyle}\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                class=\"form-check-label\"\r\n                onClick={toggleStyle}\r\n                for=\"flexSwitchCheckDefault\"\r\n              >\r\n                {btntext}\r\n              </label>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-success mx-1\" onClick={handleUpClick}>\r\n          Uppercase\r\n        </button>\r\n        <button className=\"btn btn-success mx-1\" onClick={handleLoClick}>\r\n          Lowercase\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container my-3\" style={myStyle}>\r\n        <h1>Your text summary :</h1>\r\n        <p>\r\n          Total {text.split(\"\").length} words and {text.length} characters\r\n        </p>\r\n        <p>Time: {0.008 * text.split(\"\").length} Minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\n\nfunction App() {\n  return (\n    <>\n    <Navbar title=\"TheFormatter\" abouttext=\"About\"/>\n    <div className=\"container\">\n    <TextForm heading=\"Add text here\"/>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}